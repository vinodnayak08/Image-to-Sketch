# -*- coding: utf-8 -*-
"""Image to Sketch.ipynb
 
Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EZrsqiPKRA65OEu-D8wwTQxkewoFU2Be

# **Converting  Image  to  Pencil  Sketch  Using  Python**
---

### *In this project, we will be converting a normal image to a pencil sketch using **Computer Vision** in a **Python** Programming language.*

### **Step 1 :  Importing the required libraries**
"""

from google.colab.patches import cv2_imshow

import cv2

"""### **Step 2 :   Loading the image**

By using the below code, we will load the image that is to be processed.
"""

from google.colab import drive
drive.mount('/content/drive')

img = cv2.imread('/content/drive/MyDrive/IMG_20191005_102322.jpg', 1)
img = cv2.resize(img, (570, 300))

cv2_imshow(img)

"""### **Step 3 :  Converting the Image into gray_scale image**

By using the below code, we will be able to convert the input image into equivalent grey-scale using cv2.cvtColor.
"""

img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

cv2_imshow(img)

"""### **Step 4 :  Inverting the image**

The below code will invert the image color using cv2.bitwise
"""

img_invert = cv2.bitwise_not(img_gray)

cv2_imshow(img_invert)

"""### **Step 5 :  Smoothing the image**

By using the below code, we will smooth the image using Gaussian Blur


"""

img_smoothing = cv2.GaussianBlur(img_invert, (21, 21),sigmaX=0, sigmaY=0)

cv2_imshow(img_smoothing)

"""We have used the gaussian blur technique with 21 x 21 pixel and the default sigma values filter on the image to smoothen our image. By increasing the filter size, we can create thin lines for our sketch and it is used to reduce the noise in the image.

### **Step 6 :  Obtaining the final sketch**

By using the below code, we will obtain the final pencil sketch of the input image using a blend function dodgev2.
"""

def dodgeV2(x, y):
  return cv2.divide(x, 255 - y, scale=256)

"""By using this function, it is dividing the greyscale value of the image by the inverse of blurred image value which highlights the boldest edges. This technique is used by traditional photographers to print photos from the reel.

### **Step 7 :  Final Output as Pencil Sketch**

Here, a thin border is applied to the final output image
"""

final_img = dodgeV2(img_gray, img_smoothing)

final_img = cv2.copyMakeBorder(final_img, 1,1,1,1, cv2.BORDER_CONSTANT)
cv2_imshow(final_img)

"""### *Here is a small transformations from the **input color image** to an **output sketch image**.*





"""
